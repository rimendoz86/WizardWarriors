services:
  traefik:
    image: "traefik:v3.1.7"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - wiznet

  db:
    image: "postgres:17.1"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wizardwarriors
    ports:
      - "5432:5432"
    volumes:
      - pg-data-volume:/var/lib/postgresql/data
    depends_on: ["traefik"]
    networks:
      - wiznet

  ws:
    build:
      context: .
      dockerfile: docker/websocket-server.Dockerfile
      args:
        DATABASE_URL: postgresql://postgres:postgres@db/wizardwarriors
        REDIS_URL: redis://localhost:6379/0
    depends_on: ["traefik", "db"]
    networks:
      - wiznet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ws.rule=Host(`ww.localhost`) && PathPrefix(`/game`)"
      - "traefik.http.routers.ws.service=ws-service"
      - "traefik.http.routers.ws.entrypoints=web"
      - "traefik.http.services.ws-service.loadbalancer.server.port=8080"

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
      args:
        NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-ws://ww.localhost/game}
    environment:
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-ws://ww.localhost/game}
    depends_on: ["db", "traefik", "ws"]
    networks:
      - wiznet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ww-ui.rule=Host(`ww.dev.localhost`)"
      - "traefik.http.routers.ww-ui.service=ww-ui-service"
      - "traefik.http.routers.ww-ui.entrypoints=web"
      - "traefik.http.services.ww-ui-service.loadbalancer.server.port=3000"

networks:
  wiznet:
    driver: bridge

volumes:
  pg-data-volume:
    external: false
